name: "üö® PURGE & VERIFY (history + head)"

on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  purge-and-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout FULL history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure repo isn't shallow (fallback)
        run: |
          if git rev-parse --is-shallow-repository | grep -q true; then
            git fetch --unshallow --tags
          fi
      - name: Install tools
        run: |
          python3 -m pip install --user git-filter-repo
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          sudo apt-get update
          sudo apt-get install -y ripgrep
      - name: Create replacement rules
        run: |
          cat > replacements.txt << 'EOF'
regex:(?i)Manny==>[REDACTED]
regex:(?i)\bL5V\b==>[REDACTED]
regex:\b1442\b==>[REDACTED]
regex:\b1015\b==>[REDACTED]
EOF
      - name: Create paths-to-remove list
        run: |
          cat > paths-to-remove.txt << 'EOF'
.gitconfig
.env
.env.*
*.env
**/*.env
*.env.*
**/*.env.*
EOF
      - name: Rewrite history (git-filter-repo)
        run: |
          git filter-repo --force \
            --replace-text replacements.txt \
            --paths-from-file paths-to-remove.txt \
            --invert-paths
      - name: GC and force-push
        run: |
          git reflog expire --expire=now --all
          git gc --prune=now --aggressive
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git push origin "$BRANCH" --force
      - name: Verify HEAD + history
        id: verify
        run: |
          : > verify_report.txt
          echo "=== Verify HEAD: .env files ===" | tee -a verify_report.txt
          head_env=0
          if rg -INno --pcre2 '(?:^|/)\.env(?:$|[.\w-])' --hidden --glob '!.git' . | tee -a verify_report.txt; then head_env=1; fi
          echo -e "\n=== Verify HEAD: removed terms ===" | tee -a verify_report.txt
          head_terms=0
          for P in '(?i)Manny' '(?i)\bL5V\b' '\b1442\b' '\b1015\b'; do
            echo -e "\n-- $P --" | tee -a verify_report.txt
            if rg -INno --pcre2 "$P" --hidden --glob '!.git' . | tee -a verify_report.txt; then head_terms=1; fi
          done
          echo -e "\n=== Verify HISTORY: .env-like paths ===" | tee -a verify_report.txt
          hist_env=0
          if git rev-list --objects --all | grep -Ei '(^|/)\.env($|[.\w-])' | tee -a verify_report.txt; then hist_env=1; fi
          echo "head_env=$head_env" >> $GITHUB_OUTPUT
          echo "head_terms=$head_terms" >> $GITHUB_OUTPUT
          echo "hist_env=$hist_env" >> $GITHUB_OUTPUT
      - name: Upload verification report
        uses: actions/upload-artifact@v4
        with:
          name: cleanup-verify-report
          path: verify_report.txt
      - name: Fail if anything remains
        if: steps.verify.outputs.head_env == '1' || steps.verify.outputs.head_terms == '1' || steps.verify.outputs.hist_env == '1'
        run: |
          echo "‚ùå Cleanup verification failed. See 'cleanup-verify-report' artifact."
          exit 1
